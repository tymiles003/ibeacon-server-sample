apply plugin: 'java'
apply plugin: 'project-report'

configurations {
    cobertura
}
 
dependencies {
    cobertura 'net.sourceforge.cobertura:cobertura:1.9.4.1'
    cobertura 'log4j:log4j:1.2.16'
}
 
def tmpDir = new File(buildDir, 'tmp')
def coberturaReportDirName = 'cobertura'
def coberturaReportDir = new File(reporting.baseDir, coberturaReportDirName)
def coberturaTmpDirName = 'cobertura'
def coberturaTmpDir = new File(tmpDir, coberturaTmpDirName)
def coberturaInstrDirName = 'instr'
def coberturaInstrDir = new File(coberturaTmpDir, coberturaInstrDirName)
def coberturaMetaDataFileName = 'cobertura.ser'
def coberturaMetaDataFile = new File(coberturaTmpDir, coberturaMetaDataFileName)
 
test {
    jvmArgs '-XX:-UseSplitVerifier'
    systemProperties ['net.sourceforge.cobertura.datafile'] = coberturaMetaDataFile
    doFirst {
        ant {
            taskdef(resource: 'tasks.properties', classpath: configurations.cobertura.asPath)

            'cobertura-instrument'(todir: coberturaInstrDir, datafile:coberturaMetaDataFile) {
                fileset(dir: sourceSets.main.output.classesDir,
                        includes: '**/*.class',
                        excludes: '**/*Test.class')
            }
        }
        classpath = files("${coberturaInstrDir}") + configurations.cobertura + classpath
    }
    doLast {
        ant {
            'cobertura-report'(destdir: "${reporting.baseDir}/${coberturaReportDirName}",
                               datafile: coberturaMetaDataFile, srcdir: 'src/main/java', format: 'html')
     
            'cobertura-report'(destdir: "${reporting.baseDir}/${coberturaReportDirName}",
                               datafile: coberturaMetaDataFile, srcdir: 'src/main/java', format: 'xml')
        }
    }
}
